# 정렬 : 데이터를 특정한 기준에 따라서 순서대로 나열하는 것을 말한다. (오름차순 or 내림차순 등...)
# => 정렬 알고리즘은 프로그램을 작성할 때 가장 많이 사용되는 알고리즘 중 하나이다.
#  => 이진 탐색이 가능해진다.

# 정렬 알고리즘) 
# => 선택 정렬, 삽입 정렬, 퀵 정렬, 계수 정렬 (많이 사용하는 것들)
#  파이썬에서 제공하는 기본 정렬 라이브러리를 적용하여 좀 더 효과적인 정렬 수행 방법도 다룸 (이책에서)

#### 면접 단골문제 정렬 알고리즘 ####

# 선택 정렬)
# 데이터가 무작위로 여러 개 있을 때, 이 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고, 
# 그다음 작은 데이터를 선택해 앞에서 두번째 데이터와 바꾸는 과정을 반복하면 어떨까?
# 이 방법은 가장 원시적인 방법으로 매번 '가장 작은 것을 선택'한다는 의미에서 선택 정렬(selection Sort) 알고리즘이라고 한다.

# 예제 코드)
'''
array = [7,5,9,0,3,1,6,2,4,8]

for i in range (len(array)):
    min_index = i
    for j in range(i+1, len(array)):
        if array[min_index] > array[j]:
            min_index = j
    array[i], array[min_index] = array[min_index], array[i] # 스왑

print(array)
'''
# 삽입 정렬)
# 특정한 데이터를 적절한 위치에 '삽입'한다는 의미에서 삽입 정렬(Insertion Sort)이라고 부른다.
# 더불어 삽입 정렬은 특정한 데이터가 적절한 위치에 들어가기 이전에, 그 앞까지의 데이터는 이미 정렬되어 있다고 가정한다.
# 정렬되어 있는 데이터 리스트에서 적절한 위치를 찾은 뒤에 그 위치에 삽입된다는 점이 특징이다.

# 예제 코드)
'''
array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(1, len(array)):
    for j in range(i, 0, -1):
        if array[j] < array[j-1]:
            arrary[j], array[j-1] = array[j-1], array[i]
        else:
            break

print(array)
'''
# 퀵 정렬)
# 지금 까지 배운 알고리즘 중에 가장 많이 사용되는 알고리즘이다.
# 대부분의 프로그래밍 언어에서 정렬 라이브러리의 근간이 되는 알고리즘이기도 하다.
# '기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은데이터의 위치를 바꾸면 어떨까?'
# => 퀵 정렬은 기준을 설정한 다음 큰 수와 작은 수를 교환한 후 리스트를 반으로 나누는 방식으로 동작한다.
# => 퀵 정렬에서는 피벗(Pivot)이 사용된다. : 큰 숫자와 작은 숫자를 교환할 때, 교환하기 위한 '기준'
# => 퀵 정렬을 수행하기 전에는 피벗을 어떻게 설정할 것인지 미리 명시해야 한다.

# 호어 분할 방식에서의 규칙에 따른 피벗 설정
# => 리스트에서 첫 번째 데이터를 피벗으로 정한다.